# Environment Configuration
NODE_ENV=development
PORT=5000

# Application Configuration
APP_NAME=Your Exam Study Planner
APP_VERSION=1.0.0
APP_DESCRIPTION=Full-stack Exam Study Planner - Configurable for multiple exam types

# Frontend Configuration
VITE_PORT=8080
VITE_API_URL=http://localhost:5000
VITE_APP_NAME=Your Study Planner

# Database
# Replace with your MongoDB Atlas connection string
# Format: mongodb+srv://<username>:<password>@<cluster-name>.<random-string>.mongodb.net/examplanner?retryWrites=true&w=majority
MONGODB_URI=mongodb+srv://username:password@cluster0.xxxxx.mongodb.net/examplanner?retryWrites=true&w=majority

# JWT Secret
# Generate a strong secret key for production
# You can use: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-here-make-it-very-long-and-random
JWT_EXPIRE=30d

# CORS - Support multiple origins separated by commas
# Development example:
# CORS_ORIGIN=http://localhost:3000,http://localhost:5173,http://localhost:8080,http://localhost:8081

# Production example:
# CORS_ORIGIN=https://yourapp.com,https://www.yourapp.com,https://yourapp.netlify.app

# For mixed environments:
# CORS_ORIGIN=http://localhost:3000,https://yourapp.com

CORS_ORIGIN=http://localhost:3000,http://localhost:5173,http://localhost:8080,http://localhost:8081

# Rate Limiting Configuration
RATE_LIMIT_WINDOW=15
RATE_LIMIT_MAX_REQUESTS=100

# File Upload Configuration
MAX_FILE_SIZE=10mb
UPLOAD_DIR=uploads

# Email Configuration (Optional - for notifications, password reset)
EMAIL_SERVICE=gmail
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password
EMAIL_FROM=noreply@yourapp.com

# Security Configuration
# Enable/disable features
ENABLE_REGISTRATION=true
ENABLE_PASSWORD_RESET=true
ENABLE_EMAIL_VERIFICATION=false

# Deployment Notes:
# 1. For production, set NODE_ENV=production
# 2. Use environment-specific values for CORS_ORIGIN
# 3. Generate a strong JWT_SECRET in production: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# 4. Replace MONGODB_URI with your actual Atlas connection string
# 5. Make sure to whitelist your deployment server's IP in MongoDB Atlas
# 6. Configure email settings if you want password reset functionality
# 7. Adjust rate limiting based on your expected traffic
# 8. Set appropriate file upload limits for your use case

# Platform-specific Environment Variables:
# Heroku: Set via: heroku config:set VARIABLE_NAME=value
# Vercel: Set in dashboard or vercel.json
# Netlify: Set in site settings or netlify.toml
# Railway: Set via dashboard or railway.json
# Render: Set in dashboard
